{"version":3,"sources":["components/Labels/index.js","components/IssueModal/index.js","components/Pagination/index.js","components/IssuesTable/index.js","components/IssuesContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Labels","props","labels","map","label","labelKey","Badge","style","backgroundColor","color","name","IssueModal","Modal","show","size","onHide","onClose","dialogClassName","Header","closeButton","Title","title","number","Body","Row","Col","sm","maxHeight","overflow","allowDangerousHtml","body","Footer","Button","variant","onClick","Pagination","useState","pageItems","setPageItems","totalPages","maxPageCount","currentPage","useEffect","i","push","Item","active","e","onChange","startPageIndex","First","disabled","skipPages","Prev","Next","Last","IssuesTable","selectedIssue","setSelectedIssue","showIssueModal","setShowIssueModal","issues","items","Table","striped","bordered","hover","issue","key","handleIssueClick","state","perPage","onPageChange","total_count","IssuesContainer","repo","setRepo","setIssues","page","setPage","loading","setLoading","searchOpenIssues","toggleSearchOpenIssues","setStartPageIndex","fetch","then","res","json","owner","login","Tabs","defaultActiveKey","id","Tab","eventKey","skip","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEe,SAASA,EAAOC,GAC3B,OACI,mCACCA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACd,qCACI,cAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,gBAAgB,IAAD,OAAMJ,EAAMK,QAA3C,SAAwDL,EAAMM,OAAc,YCH7E,SAASC,EAAWV,GAC/B,OACI,eAACW,EAAA,EAAD,CAAOC,KAAMZ,EAAMY,KAAMC,KAAK,KAAKC,OAAQd,EAAMe,QAASC,gBAAgB,YAA1E,UACI,cAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,EAAzB,SACI,eAACP,EAAA,EAAMQ,MAAP,WAAcnB,EAAMoB,MAApB,KAA6BpB,EAAMqB,YAGvC,cAACV,EAAA,EAAMW,KAAP,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAInB,MAAO,CAAEoB,UAAW,QAASC,SAAU,QAApD,SACI,cAAC,IAAD,CAAeC,mBAAmB,OAAlC,SAA0C5B,EAAM6B,SAEpD,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC1B,EAAD,CAAQE,OAAQD,EAAMC,gBAKlC,cAACU,EAAA,EAAMmB,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASjC,EAAMe,QAA3C,wB,aCpBD,SAASmB,EAAWlC,GAAQ,IAAD,EACJmC,mBAAS,IADL,mBAC/BC,EAD+B,KACpBC,EADoB,KAEhCC,EAAatC,EAAMsC,WACnBC,EAAeD,EAAa,EAAI,EAAIA,EACtCE,EAAcxC,EAAMwC,YAUxB,OARAC,qBAAU,WAGN,IAFA,IAAIL,EAAY,GADJ,WAGHM,GACLN,EAAUO,KAAK,cAAC,IAAKC,KAAN,CAAmBC,OAAQL,IAAgBE,EAAGT,QAAS,SAACa,GAAD,OAAO9C,EAAM+C,SAASL,IAA7E,SAAkFA,GAAlEA,KAD1BA,EAAI1C,EAAMgD,eAAgBN,GAAMH,EAAevC,EAAMgD,eAAiBN,IAAM,EAA5EA,GAGTL,EAAaD,KACd,CAACpC,EAAMgD,iBAEN,eAAC,IAAD,WACI,cAAC,IAAKC,MAAN,CAAYC,SAAmC,IAAzBlD,EAAMgD,eAAsBf,QAAS,kBAAMjC,EAAMmD,WAAWZ,MAClF,cAAC,IAAKa,KAAN,CAAWnB,QAAS,kBAAMjC,EAAM+C,SAASP,EAAc,MACtDJ,EACD,cAAC,IAAKiB,KAAN,CAAWpB,QAAS,kBAAMjC,EAAM+C,SAASP,EAAc,MACvD,cAAC,IAAKc,KAAN,CAAWJ,SAAWlD,EAAMgD,eAAiBT,IAAkBD,EAAYL,QAAS,kBAAMjC,EAAMmD,UAAUZ,SCjBvG,SAASgB,EAAYvD,GAAQ,IAAD,IACGmC,mBAAS,IADZ,mBAChCqB,EADgC,KACjBC,EADiB,OAEKtB,oBAAS,GAFd,mBAEhCuB,EAFgC,KAEhBC,EAFgB,KAWvC,OACI,oCAEQ,UAAA3D,EAAM4D,cAAN,eAAcC,QAEd,qCACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,uCACA,uCACA,6CAGR,gCAEQjE,EAAM4D,OAAOC,MAAM3D,KAAI,SAACgE,EAAOC,GAAR,OACnB,qBAAclC,QAAS,SAACa,GAAD,OAtB9B,SAACoB,GACtBT,EAAiBS,GACjBP,GAAkB,GAoBwCS,CAAiBF,IAA/C,UACI,6BAAKA,EAAM9C,QACX,6BACI,cAACf,EAAA,EAAD,CAAO2B,QAAyB,SAAhBkC,EAAMG,MAAmB,UAAY,YAArD,SAAmEH,EAAMG,UAE7E,6BACI,cAACtE,EAAD,CAAQE,OAAQiE,EAAMjE,aANrBkE,WAazB,cAAC,EAAD,CACI3B,YAAaxC,EAAMwC,YACnB8B,QAAStE,EAAMsE,QACfvB,SAAU/C,EAAMuE,aAChBpB,UAAWnD,EAAMmD,UACjBH,eAAgBhD,EAAMgD,eACtBV,WAAYtC,EAAM4D,OAAOY,cAC7B,cAAC9D,EAAD,aACIE,KAAM8C,EACN3C,QA9CK,kBAAM4C,GAAkB,KA+CzBH,SCrDb,SAASiB,EAAgBzE,GAAQ,IAAD,IACnBmC,mBAAS,IADU,mBACpCuC,EADoC,KAC9BC,EAD8B,OAEfxC,mBAAS,IAFM,mBAEpCyB,EAFoC,KAE5BgB,EAF4B,OAGnBzC,mBAAS,GAHU,mBAGpC0C,EAHoC,KAG9BC,EAH8B,OAIb3C,oBAAS,GAJI,mBAIpC4C,EAJoC,KAI3BC,EAJ2B,OAKb7C,mBAAS,IALI,mBAKpCmC,EALoC,aAMQnC,oBAAS,IANjB,mBAMpC8C,EANoC,KAMlBC,EANkB,OAOC/C,mBAAS,GAPV,mBAOpCa,EAPoC,KAOpBmC,EAPoB,KA6B3C,OAhBA1C,qBAAU,WACN2C,MAAM,gDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIX,EAAQW,SAG7B7C,qBAAU,WACNuC,GAAW,SAAAD,GAAO,OAAI,KACtBK,MAAM,8EAAD,OAA+EH,EAAmB,cAAgB,GAAlH,qBAAiIX,EAAjI,iBAAiJO,IACjJQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFV,EAAUU,GACVN,GAAW,SAAAD,GAAO,OAAI,UAE/B,CAACF,EAAMI,EAAkBX,IAGxB,qCACI,yCAAKI,EAAKc,aAAV,aAAK,EAAYC,MAAjB,MAA2Bf,EAAKjE,QAChC,cAACiF,EAAA,EAAD,CAAMC,iBAAiB,SAASC,GAAG,2BAAnC,SACI,eAACC,EAAA,EAAD,CAAKC,SAAS,SAAS1E,MAAM,SAA7B,UACI,cAACW,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAvBrB,kBAAMiD,GAAwBD,IAuBnC,iCAA8E,IAE1EF,EAEI,aAEA,cAACxB,EAAD,CACIK,OAAQA,EACRpB,YAAaqC,EACbN,aAjCH,SAAAM,GAAI,OAAIC,EAAQD,IAkCb1B,UAnCV,SAAC4C,GAAD,OAAUZ,EAAkBnC,EAAiB+C,IAoCnC/C,eAAgBA,EAChBsB,QAASA,YCtC1B0B,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACxB,EAAD,OCKSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.cab83cf2.chunk.js","sourcesContent":["import { Badge } from 'react-bootstrap';\n\nexport default function Labels(props) {\n    return (\n        <>\n        {props.labels.map((label, labelKey) => (\n            <>\n                <Badge style={{ backgroundColor: `#${label.color}` }} >{label.name}</Badge>{' '}\n            </>\n        ))}\n        </>\n    )\n}","import { Modal, Button, Row, Col } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport Labels from '../Labels';\n\nexport default function IssueModal(props) {\n    return (\n        <Modal show={props.show} size=\"xl\" onHide={props.onClose} dialogClassName=\"modal-90w\">\n            <Modal.Header closeButton>\n                <Modal.Title>{props.title} #{props.number}</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Row>\n                    <Col sm={10} style={{ maxHeight: '500px', overflow: 'auto' }}>\n                        <ReactMarkdown allowDangerousHtml=\"true\">{props.body}</ReactMarkdown>\n                    </Col>\n                    <Col sm={2}>\n                        <Labels labels={props.labels} />\n                    </Col>\n                </Row>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onClose}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import { useState, useEffect } from 'react';\nimport { Pagination as Page } from 'react-bootstrap';\n\nexport default function Pagination(props) {\n    const [pageItems, setPageItems] = useState([]);\n    const totalPages = props.totalPages;\n    const maxPageCount = totalPages > 5 ? 5 : totalPages;\n    let currentPage = props.currentPage;\n\n    useEffect(() => {\n        let pageItems = [];\n\n        for (let i = props.startPageIndex; i <= (maxPageCount + props.startPageIndex); i++) {\n            pageItems.push(<Page.Item key={i} active={currentPage === i} onClick={(e) => props.onChange(i)}>{i}</Page.Item>);\n        }\n        setPageItems(pageItems);\n    }, [props.startPageIndex]);\n    return (\n        <Page>\n            <Page.First disabled={props.startPageIndex === 1} onClick={() => props.skipPages(-maxPageCount)} />\n            <Page.Prev onClick={() => props.onChange(currentPage - 1)} />\n            {pageItems}\n            <Page.Next onClick={() => props.onChange(currentPage + 1)} />\n            <Page.Last disabled={(props.startPageIndex + maxPageCount) === totalPages} onClick={() => props.skipPages(maxPageCount)} />\n        </Page>\n    );\n}","import { useState } from 'react';\nimport { Table, Badge } from 'react-bootstrap';\nimport IssueModal from '../IssueModal';\nimport Labels from '../Labels';\nimport Pagination from '../Pagination';\n\nexport default function IssuesTable(props) {\n    const [selectedIssue, setSelectedIssue] = useState({});\n    const [showIssueModal, setShowIssueModal] = useState(false);\n    \n    const handleModalClose = () => setShowIssueModal(false);\n\n    const handleIssueClick = (issue) => {\n        setSelectedIssue(issue);\n        setShowIssueModal(true);\n    };\n\n    return (\n        <>\n            {\n                props.issues?.items &&\n\n                <>\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>Ttile</th>\n                                <th>State</th>\n                                <th>Labels</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                props.issues.items.map((issue, key) => (\n                                    <tr key={key} onClick={(e) => handleIssueClick(issue)}>\n                                        <td>{issue.title}</td>\n                                        <td>\n                                            <Badge variant={issue.state === 'open' ? 'success' : 'secondary'}>{issue.state}</Badge>\n                                        </td>\n                                        <td>\n                                            <Labels labels={issue.labels} />\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </Table>\n                    <Pagination\n                        currentPage={props.currentPage}\n                        perPage={props.perPage}\n                        onChange={props.onPageChange}\n                        skipPages={props.skipPages}\n                        startPageIndex={props.startPageIndex}\n                        totalPages={props.issues.total_count} />\n                    <IssueModal\n                        show={showIssueModal}\n                        onClose={handleModalClose}\n                        {...selectedIssue}\n                    />\n                </>\n            }\n        </>\n    );\n}","import { useState, useEffect } from 'react';\nimport { Tabs, Tab, Button } from 'react-bootstrap';\nimport IssuesTable from '../IssuesTable';\n\nexport default function IssuesContainer(props) {\n    const [repo, setRepo] = useState({});\n    const [issues, setIssues] = useState({});\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(true);\n    const [perPage, setPerPage] = useState(10);\n    const [searchOpenIssues, toggleSearchOpenIssues] = useState(false);\n    const [startPageIndex, setStartPageIndex] = useState(1);\n\n    const skipPages = (skip) => setStartPageIndex(startPageIndex + skip);\n    const handlePageChange = page => setPage(page);\n    const handleSearch = () => toggleSearchOpenIssues(!searchOpenIssues);\n\n    useEffect(() => {\n        fetch('https://api.github.com/repos/angular/angular')\n            .then(res => res.json())\n            .then(res => setRepo(res));\n    });\n\n    useEffect(() => {\n        setLoading(loading => true);\n        fetch(`https://api.github.com/search/issues?q=repo:angular/angular/node+type:issue${searchOpenIssues ? '+state:open' : ''}&per_page=${perPage}&page=${page}`)\n            .then(res => res.json())\n            .then(res => {\n                setIssues(res);\n                setLoading(loading => false);\n            });\n    }, [page, searchOpenIssues, perPage]);\n\n    return (\n        <>\n            <h3>{repo.owner?.login} / {repo.name}</h3>\n            <Tabs defaultActiveKey=\"issues\" id=\"uncontrolled-tab-example\">\n                <Tab eventKey=\"issues\" title=\"Issues\">\n                    <Button variant=\"primary\" onClick={handleSearch}>Search: Open Issues</Button>{' '}\n                    {\n                        loading\n                            ?\n                            'Loading...'\n                            :\n                            <IssuesTable\n                                issues={issues}\n                                currentPage={page}\n                                onPageChange={handlePageChange}\n                                skipPages={skipPages}\n                                startPageIndex={startPageIndex}\n                                perPage={perPage} />\n                    }\n                </Tab>\n            </Tabs>\n        </>\n    );\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport IssuesContainer from './components/IssuesContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <IssuesContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}